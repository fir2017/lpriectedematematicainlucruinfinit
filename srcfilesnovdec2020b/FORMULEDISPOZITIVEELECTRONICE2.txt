//pagina 101 tbj

//tensiunile
//vbe -vbc vce 
//alimentari
//vcc
//curenti
//ie ic ib
//rezistente
//rb rc
//polarizare la npn
//b +
//e gnd - - 
//c +



//caracteristici si parametrii
 
float betacc(float IC, float IB)
{
return IC/IB;
}


//parametrii hibrizi

float hfe(float betacc)
{
	return betacc
}

//alfa subunitar
float alfacc(float IC, float IE)
{
	return CI/IE;
}

//relatia intre betacc si alfacc

float IE(float IC, float IB)
{
	return IC+IB;
}

bool relatieAlfaBeta(float alfacc, float betacc)
{
	if((1/alfacc) == (1+(1/betacc)))
	{ 
		return true;
	}
	else
 	{
		return false;
	}
}

float betacc(float alfacc)
{
	return alfacc/(1-alfacc);
}

//analza curentilor si a tensiunilor

float VB(float potentialDeBariera)
{
	return potentialDeBariera;
}

float VRB(float VBB, float VBE)
{
	return VBB-VBE;
}

float VRB(float IB, float RB)
{
	return IB*RB;
}

float IB(float VBB, float VBEm float RB)
{
	return (VBB-VBE)/RB;
}

float VRC(float IC, float RC)
{
	return IC*RC;
}

float VCE(float VCC, float IC, float RC)
{
	return VCC-IC*RC;
}

float IC(float betacc,float IB)
{
	return betacc*IB;
}

float VCB(float VCE, float VBE)
{
	return VCE - VBE;
}


//caracteristicile curentului de colector IC
//graficul IC si VCE
//regiuni
//saturatie 0 ... prag
//activa prag ... vcemax
//strapungere >vcemax
//inversa <0


//regim de glocare

bool eBlocat(float IB=0, float ICEO, float VCE, float VCC)
{
	if(IB==0)
	{
	return true;
	}
	else if(ICEO/100<1)
	{
		return true;
	}
	else if(VCE==VCC)
	{
		return true;
	}
	else
	{
		return false;
	}
}


//regimul de saturatie
float VCE(float VCC, float betacc, float IB)
{
	return VCC-(betacc*IB);
}

float VCEsat(float VCC, float IC, float RC)
{
	return VCC-(IC*RC);	
}

//dreapat de sarcina 
//saturatie VCEsat la ICsat 
//blocare VCC pe VCE
float ICsat(float VCC, float VCEsat, float RC)
{
	return (VCC-VCEsat)/RC;
}


float IB(float VBB, float VBE, float RB)
{
	return (VBB-VBE)/RB;
}


//beta cc variatia cu TJ
//temperatura jonctiunii TJ


//tbj valori limita absolute
float IC(float PDMAX, float VCE)
{
	return PDMAX/VCE;
}

float VCE(float PDMAX, float IC)
{
	return PDMAX/IC;
}

//curba puterii disipate maxime
//graficul icmax pe vce
//limita icmax a b c d vcemax;

float VRC(float IC, float RC)
{
	return IC*RC;
}

float VRC(float VCC, float VCE)
{
	return VCC-VCE;
}

float VCCmax(float VCEmax, float VRC)
{
	return VCEmax + VRC;
}

float PD(float VCEmax, float IC)
{
	return VCEmax*IC;
}

//corectare pdmax 
//pdmax la 25oC

float deltaPDmax(float CoefCorectie, float temp1, float temp25)
{
	return CoefCorectie*(temp1-temp25);
}

float PDmaxCorectata(float PDmax, float deltaPDmax)
{
	return PDmax - deltaPDmax;
}

// tbj
//functia de amplificare


//marimi de cc si de ca ale tbj
//curenti , tensiuni , rezistente , potentiale 
//Vinca, VBBcc Vb Vc
//RC RB re
//VCC


//circutul tbj echivalent de curent alternativ

float Ic(float Ie)
{
	return Ie;
}

float Ie(float Vb, float re)
{
 return Vb/re;
}

float Vc(float Ic, float RC)
{
	return Ic*RC;
}
//pt Ic aproximativ egal Ie
float Vc(float Ie, float RC)
{
	return Ie*RC;
}

float Vb(float Vin, float Ib,float RB)
{
	return Vin - Ib*RB;
}

//amplificarea in tensiune in ca 
//al tbjca
float Av(float Vc, float Vb)
{
	return Vc/Vb;
}

float Av2(float Ie, float RC, float re)
{
	return (Ie*RC)/(Ie*re);
}
float Av3( float RC, float re)
{
	return RC/re;
}

//re rezistenta interna in emitor a tbjca

//functionarea in comutatie 

//conditii de blocare
float VCEBlocare(float VCC)
{
	return VCC;
}

//conditia de saturare

float ICsat(float VCC, float VCEsat, float RC)
{
return (VCC-VCEsat)/RC;
}

float IBmin(float ICsat, float betacc)
{
	return ICsat / betacc;

}

float VRB(float VIN, float VBE)
{
	return VIN - VBE;
}


float RBmax(float VRB, float IBmin)
{
	return VRB / IBmin;
}

float IB(float VRB, float RB)
{
	return VRB/RB;
}

float Vin(float IBmin, float RB, float potentialDeBariera)
{
	return 2 * IBmin * RB + potentialDeBariera;
}

//pagina 130
//circuite de polarizare cu tbj
//psd punctul static de functionare
//alimentarea in cc
//amplificator cu tbj
//taiere superioara la blocare si inferioara la saturare a vout
//grafic ic la vce

float VCE(float VCC, float IC, float RC)
{
return VCC-IC*RC;
}

//dreapta de sarcina in cc
//dreapta de la IC A Q sau PSF centrat B VCE
//PSD ICQ si VCEQ
float IC(float VCC, float RC)
{
return VCC/RC;
}

float ICneliniar(float RC, float VCE, float VCC, float RC)
{
	return -(1/RC)*VCE+(VCC/RC);
}

//functionarea liniara

float ICQ(float betacc, float IBQ)
{
	return betacc*IBQ;
}

float IBQ(float VBB, float potentialDeBariera, float RB)
{
	return (VBB-potentialDeBariera)/RB;
}

float VCEQ(float VCC, float ICQ, float RC)
{
	return VCC - ICQ*RC;
}

//distorsionarea formelor de unda
//tranzistor in saturatie
//tbj in blocare
//tbj atat in blocare cat si in saturatie

float CrestereIC(float ICsat, float ICQ)
{
	return ICsat = ICQ;
}

float Ibvarf(float Icvarf, float betacc)
{
	return Icvarf / betacc;
}



//polarizarea bazei de la VCC

float IB(float VCC, float VBE, float RB)
{
	return (VCC-VBE)/RB;	
}

 float VCE( float VCC,  float IC,  float RC)
{
	return VCC- IC*RC;
}

float IC( float betacc,  float  VBE,  float  RB)
{
	return betacc*((VCC-VBE)/RB);
}

//influenta betacc asupra PSF

 float VCE( float VC,  float IC,  float RC)
{
	return VCC- IC*RC;
}

//variatia ic si vb cu temperatura
float deltaIC(float IC75,  float IC25)
{
	return ((IC75-IC25)/IC25)*100;
}

 float deltaVCE(float VCE75,  float VCE25)
{
	return ((VC75-VC25)/VC25)*100;
}

//alti factori care influenteaza circuitul cu baza polarizata de la VCC

 bool eMultMaiMAre( float a ,  float b ,  float N)
{
	if(a/N>b){ return true;}
	else {return false;}
}

//polarizare emitor din sursa de tensiuen separata
 float VEE( float IB,  float  RB,  float  IE,  float  RE,  float VBE)
{
	return -(IB*RB+ IE*RE + VBE);
}

float IB(float IE, float betacc)
{
return IE/betacc;
}

 float IE( float VBE,  float  VEE,  float RE,  float  RB,  float  betacc)
{
	return (VEE-VBE)/(RE+(RB/betacc));
}

 float VE( float VEE,  float  IE,  float  RE)
{
	return VEE + IE*RE;
}

 float VB( float VE,  float VBB)
{
	return VE+VBB;
}

 float VC( float VCC,  float IC,  float RC)
{
	return VCC-IC*RC;
}

 float VCE( float  VCC,  float VEE,  float IC,  float RC,  float RE)
{
	return VCC - VEE - IC*(RC+RE);
}


 float ICsat( float  VCC,  float  VEE,  float  RC,  float  RE)
{
	return (VCC-VEE)/(RC+RE);
}

 float VCEblocare( float VCC,  float  VEE)
{
	return VCC- VEE;
}

 float deltaICmax( float ICsat,  float IC)
{

return ICsat = IC;
}

//stabilitatea psf al circuitului cu emitor polarizat din sursa separata

 float IE( float VEE,  float  VBE ,  float  RE,  float  RB,  float  betacc)
{
	if(eMultMaiMare(RE,RB/betacc,10)!=true)
	{
		return (-VEE-VBE)/(RE+(Rb/betacc));
	}
	else if(eMultMaiMare(VEE, VBE, 10)==true)
	{
		return VEE/RE;
	}
	else
	{
		return (-VEE-VBE)/RE;
	}
}

//tbj pnp cu emitor polarizat din sursa separata

//polarizare cu divizor rezistiv

float RINbaza(float VIN, float IIN)
{
return VIN/RIN;
}

float VIN(float VBE, float  IE, float RE)
{
	if(eMultMaiMare(IE*RE,VBE,10)!=true)
	{
		return VBE + IE*RE;
	}
	else
	{
		return IE*RE;
	}
}


float VIN (float betacc, float IB, float RE)
{
 return betacc*IB*RE;
}

float RIN(float betacc, float RE)
{
	return betacc*RE;
}

//analiza circ pol cu div de V

float RTBGND(float R2,float betacc,float RE)
{
	return RParelela(R2,betacc*RE);
}


float VB(float R1, float  R2, float RE, float  betacc, float VCC)
{
	if(eMultMaiMare(betacc*RE,R2,10)!=false)
	{
		return VCC*((RParelela(R2,betacc*RE)/R1+(RParelela(R2,betacc*RE))));	
	}
	else
	{
		return (R2/(R1+R2))*VCC;
	}
}

float VE(float VB, float VBE)
{
	return VB-VBE;
}

float IE(float  VE, float RE)
{
	return VE/RE;
}

float IC(float  IE)
{
	return IE;
}

float VC(float  VCC, float  IC, float RC)
{
	return VCC-IC*RC;
}

float  VCE(float VC, float VE)
{
	return VC-VE;
}

float VCE(float VCC, float  IC, float  RC , float  RE)
{
	return VCC-IC*(RC+RE);
}


//stabilitatea circ pol de div de V
//thevenin

float RParalel(float R1, float R2)
{
	return (R1*R2)/(R1+R2);
}

float Rech(float R1,float  R2,float  VCC)
{
	return (R2/(R1+R2))*VCC;
}

float Vech(float  IB, float  Rech, float VBE, float  IE, float  RE)
{
	return IB*Rech+VBE+IE*RE;
}


float IE(float Vech, float  VBE, float  RE, float  betacc)
{
	if(eMultMaiMare(RE, Rech/betacc, 10)!=true)
	{
		return (Vech-VBE)/(RE+(Rech/betacc));
	}
	else
	{
		return (Vech-Vbe)/RE;	
	}
}


//circuit cu div V pt pnp

//pol cu reactie in colector

float IB(float  VC, float  VBE , float  RB)
{
	return (VC-VB)/RB;
}

float VC(float VCC, float  IC, float  RC)
{
	if(eMultMaiMare(IC,IB,10)==true)
	{
		return VCC-IC*RC;
	}
	else
	{
		return NECUNOSCUT;
	}
}

float IC(float VCC, float VBE, float  RC , float  RB, float betacc)
{
	return (VCC-VBE)/(RC*(RB/betacc));
}

float VCE(float VCC,  float IC, float  RC)
{
	
	return Vcc-IC*RC;
}

//stabilitatea cu variatai temp



//amplfi de semnal mic cu tbj
//functionare ampli de semnal mic
//marimi de ca
//VCE 
//Vef 
//Vmed 
//Vceef
//Vcemed
//Vcevf
//Vcevv


//amplficiator de smnal mic 
//ilutrare grafica 
//psf grafic  VCE la IC la IB 



//circuite echiv de ca ale tbj
//parametrii hibrizi h 
//i impendanta de intrare cu iesire in scurt
// r factor de reactie in tensiune  cu intrare in gol 
//f castigul in curent in bucla deschisa cu iesire in scurt 
//o admitanta de iesire cu intrare in gol


//configuratii 
//emitor comun ec 	hie hre hfe hoe 
//baza comuna  bc	hib hrb hfh hob
//colector comun cc hic hrc hfc hoc


//EC
float  hie(float Vb, float Ib)
{
	return Vb/Ib;
}

float hre(float Vb, float Vc)
{
	return Vb/Vc;
}

float hfe(float Ic, float Ib)
{
	return Ic/Ib;
}

float hoe(float Ic, float Vc)
{
	return Ic/Vc;
}

//BC

float  hib(float Ve, float Ie)
{
	return Ve/Ie;
}

float hrb(float Ve, float Vc)
{
	return Vb/Vc;
}

float hfb(float Ic, float Ie)
{
	return Ic/Ib;
}

float hob(float Ic, float Vc)
{
	return Ic/Vc;
}

//CC

float  hic(float Vb, float Ib)
{
	return Vb/Ib;
}

float hrc(float Vb, float Ve)
{
	return Vb/Ve;
}

float hfc(float Ie, float Ib)
{
	return Ie/Ib;
}

float hoc(float Ie, float Ve)
{
	return Ie/Ve;
}


//circuite cu parametrii hibrizi

//EC  B2C 
//BC  B2E
//CC  E2C

//parametrii rezistivi r 

//alfaca 
//betaca 
//re 
//rb 
//rc 

float alfaca(float Ic,float Ie)
{
	return Ic/Ie;
}

float betaca(float Ic, float Ib)
{
	return Ic/Ib;
}



//relatii intre parametrii tbj h si r 

float alfaca(float hfb)
{
	return hfb;
}

float betaca(float hfe)
{
	return hfe;
}

float re(float hre, float hoe)
{
	return hre/hoe;
}

float rc(float hre, float hoe)
{
	return (hre+1)/hoe;
}

float rb(float hie, float hre, float hoe, float hfe)
{
	return (hie-(hre/hoe)*(1+hfe));
}


//circuite echivalente cu parametrii r 
//circuit echiv general
//circuit echiv simplificat 
//echivalenta dintre circuitul cu r si simbolica tbj 


//re rezistenta interna a tbj 
float re(float IE)
{
	return 25*IE;
}

//comparatie intre betaca si betacc IC la IB 
//betacc drepata de sarcina 
//betaca interval de pe o dreapta de sarcina 
float betaca(float IC, float IB)
{
	return IC/IB;
}

float DELTAIx(float min, float max)
{return max - min;}
float ABSDELTAx(float min, float max)
{return Math.Abs(max - min) ;}

float betca(float DELTAIC, float DELTAIB)
{
	return DELTAIC/DELTAIB;
}

//amplificatoare cu emitor comun EC
//circuit echivalent de ca
//masa de semnal 
//V semnal ca in baza 

float Vb(float Rintot, float Rg, float Vg)
{
 if(eMultMaiMare(Rintot,Rg,10)!=true)
 {
 return Vg*(Rintot/(Rg+Rintot));
 }
 else 
 {
	return Vg;
 }
}


float Rintot(float R1, float R2, float Rinbaza)
{
	return(Rparalel(Rparalel(R1,R2),Rinbaza));
}

//Vin = Vb;
//Iin = In
float Rinbaza(float Vb, float Ib)
{
	return Vb/Ib;
}
float Rinbaza(float Vin, float Iin)
{
	return Vin/Iin;
}

float Vb(float Ie, float re)
{
	return Ie*re;
}
//ib aprox = ie
float Ib( float Ie, float betaca)
{
	return Ie/betaca;
}

float Rinbaza(float betaca, float re)
{
	return betaca * re;
}

float Rintot(float R1, float R2, float Rinbaza)
{
	return 
}


float Rout(float RC, float rc)
{
	if(eMultMaiMare(rc,RC,1000)==true){
	return RC;
	}

}


//castigul in tnsiuen al amplificatorului in EC

float Av(float Vc, float Vb)
{
	//Vout/Vin
	return Vc/Vb;
}

float Vc(float alfaca, float Ie, float RC)
{
	return alfa * Ic * RC;
}

float Vb(float Ie, float re)
{
	return Ie*re;
}

float Av(float Ie, float RC, float re)
{
	return (Ie*RC)/(Ie*re);
}


float Av(float Rc, float re)
{
	return Rc/re;
}

//atenuarea
float At(float Av, float Vg)
{
	return Vb/Vg;
}
float At(vloat Rintot, float Rg)
{
	return Rinto/(Rg+Rintot);	
}


//castigul total
//atenuarea * av
float avt(float Vb, float Vg, float Av)
{
	return (Vb/Vg)*Av;
}

//efectul condensatorului de decuplare a rezistorului din emitor asupra castigului in tensiune 

float XC(float RE)
{
 	return RE/10;
} 

float C2(float f, float Xc)
{
	return 1/(2 * Math.PI * f * Xc);
}

//castigi n tensiuen fara condensator de decuplare
float Av(float RC, float re, float RE)
{
	return RC/(re*RE);
}

//influenta sarcinii asupra castigului in tensiune 

float Rc(float RC, float RS)
{
   return	RC*RS  / (RC+RS);
}

float Av(float Rc, float re)
{
	return Rc/re;
}

//Rc<Rc Av scade
//RS >> RC atunci RC ~= RC si Av = ct

//stabilitatea castigului in tensiune
//pt RE>>re
float Av(float RC, float RE)
{
	return RC/RE;
}

//optimizarea stab castig in tensiune in functie de re

float Av(float RC, float RE1, re)
{
	return RC/(RE1+re);
}
//iar pt RE1 >= re*10;
float Av(float RC, float RE1)
{
	return RC/RE1;
}

//efect optimizare asupra rin a amplif

float Rinbaza(float betaca, float re, float RE1)
{
	return betaca *(re+RE1);
}

//inversare faza in amplif cu EC

float RINbaza(float betacc, float RE1, float RE2)
{
 return betacc*(RE1+ RE2);
}

//pt RINbaza >= R2 * 10

float VE(float R2, float R1, float VCC)
{
	return (R2/(R1+R2))*VCC;
}


float VE(float Vb, float potentialDeBariera)
{
	return VB - potentialDeBariera;
}

float IE(float VE, float RE1, float RE2)
{
	return VE/(RE1+RE2);
}

float VC(float VCC, float IC, float RC)
{
	return VCC-IC*RC;
}

Rinbaza(float betacc, float re, float RE1)
{
	return betaca*(re+RE1);
}

float Av(float Rc, float RE1)
{
	return Rc/RE1;
}

float Rc(float RC, float RS)
{
	return (RC*RS)/(RC+RS);
}

//castig total
float Avi(float Vb, float Vg, float Av)
{
	return Av*(Vb/Vg);
}

float Vc(float Avi, float Vin)
{
	return Avi*Vin;
}

//castig in curent 

float Ai(float Ic, float Ib)
{
	return Ic/Ib;
}
float Ai(float betaca)
{
	return betaca;
}
float Aitotal(float Ic, float Ig)
{
	return Ic/Ib;
}

float Ig(float Vg, float Rintot, float Rg)
{
	return Vg/(Rintot+Rg);
}

//castig in putere
float Ap(float Av , float Ai)
{
 return Av*Ai;
}


//amplificator cu CC

//Av
float Av(float Ie, float Re, float Ie, float re)
{
 return (Ie*Re)/(Ie*(re+Re));
}

float Vout(float Ie, float Re)
{
	return Ie*Re;
}

float Vin(float Ie, float re, float Re)
{
	return Ie*(re+Re);
}

float Av(float Vout, float Vin)
{
	return Vout/Vin;
}


float Re(float RE, float RS)
{
	return Rparalel(RE,RS);
}

float Av(float re, float Re)
{
	return Re/(re+Re);
}

//in absenta sarcini Re==RE;
//pt Re>>re atunci Av~=1

float Av(float RS, float Re, float RE)
{
	if(RS==0)
	{
	  Re = RE;		
	}

	if(eMultMaiMare(Re,re,10)==true)
	{
		return 1;
	}
}

//Rin

//Rinbaza = Vin/Iin = Vb/Ib = (Ie*(re+Re))/Ib

// pt Ie == Ic = betacc*Ib
//Ib simplificat
//Rinbaza = betaca*(re+Re);

float Rinbaza(float betaca, float re, float Re)
{      
 	if(eMultMaiMare(Re,re,10)==true)
	{
	return betaca*Re;
	}	
	else 
	{
	return betaca*(re+Re);
	}
}

float Rintot( float R1, float R2, float Rintot)
{
	return Rparalel(R1,(Rparalel(R2,Rintot));
}

//Rout

float Rout(float Rg, float betaca, float RE)
{
	return Rparalel(Rg/betaca,RR);
}

//castig in curent 
//Ai repetor pe emitor
float Ai(float Ie, float Iin)
{
	return Ie/Iin;
}

float Ai(float betaca)
{
//pt R1||R2 >> betaca*Re 
return betaca;
}

float Ai(float Ie, float Iin)
{
	return Ie/ Iin;
}

float Iin(float Vin, float Rintot)
{
	return Vin/Rintot;
}


//castig in putere 
float Ap(float Av, float Ai)
{
	return Av*Ai;
}

//pt Av==1;
float Ap(float Ai)
{
	return Ai;
}

float Re(float RE, float RS)
{
	return Rparalel(RE,RS);
}

float Apsarcina(float Ap, float RS, float RE)
{
	if(RS==RE)
	{
		return Ap/2;
	}	
	else 
	{
		return Ap;
	}
}

//configuratia darlington
//pagina 174

float Ie1(float betaca1, float Ib1)
{
	return betaca1 * Ib1;

}


float Ie2(float betaca1,float betaca2, float Ie1)
{
	return betaca1*betaca2*Ib1;
}


float betaca(float betaca1, float betaca2)
{
	return betaca1*betaca2;
}

//pt re << RE
float Rin(float betaca1, float betaca2, float RE)
{
	return betaca1*betaca2*RE;
}

float Rc(float RC, float RS)
{
	return Rparalel(RC,RS);
}

float Av(float RC, float re)
{
	return RC/re;
}

float Av(float Rc, float re)
{
	return Rc/re;
}

float PRE(float IE, float RE)
{
	return IE*IE*RE;
}

float PT2(float VCC, float VE, float IE)
{
	return ( VCC-VE)*IE;
}
float Re(float RE, float RS)
{
	return Rparalel(RE,RS);
}

float Rintot(float R1, float R2, float betaca, float re)
{
	return Rparalel(R1,Rparalel(R2,betaca*betaca*re));
}

float Rc(float RC, float Rintot)
{
	return Rparalel(RC,Rintot);
}

float Av(float Rc, float  re)
{
	return Rc/re;
}

float Av(float  Re, float  re, float  Re)
{
	return Re/(re+Re);
}

float Avtotal(float Avrepetor, float Avampl)
{
	return Avrepetor * Avampl;
}


//amp. cu BC

float  Av(float  Ic, float  Rc, float  Ie ,float  re, float  RE)
{
	if(re>=RE/10)
	{
		return Rc/ re;
	}
	else
	{
		return (Ic*Rc)/(Ie*(Rparalel(re,RE));
	}
}

float Rc(float  RC, float RS)
{
	return Rparalel(RC,RS);
}

float  Rintot(float  Ie, float  re, float  RE)
{
	if(re/10<=RE)
	{
		return re;
	}
	else
	{
	return (Ie*(Rparalel(re,RE))/Ie;
	}
}

float Rout(float  RC)
{
	return RC;
}

float Ai(){return 1;}

float Ap(float  Av,float Ai){return Av*Ai;}

//amplificatoare cu mai multe etaje 

float sumaN(ref float [] a)
{
	float suma = 0.0f;
	for(int i = 0 ; i< a.Length ; i++)
	{
		suma+=a[i];	
	}
	return suma;
}


float produsN(ref float [] a)
{
	float produs= 0.0f;
	for(int i = 0 ; i< a.Length ; i++)
	{
		produs*=a[i];	
	}
	return produs;
}

float Avtotal(ref float [] a)
{
	return produs(ref a);
}

float Avdb(float Av)
{
	return 20 * Math.Log(Av);
}

float Avtotaldb(ref float [] adb)
{
	return suma(ref adb);
}

//analiza amp cu mai multe etaje

//castig in tensiune 
//etaj 1


//Rparalel == Rp
float Rc1(float R2, float  R5, float R6, float Rinbaza2)
{
	return Rp(R3,Rp(R5,Rp(R6,Rinbaza2)));
}

float Av1(float Rc1m float  re)
{
	return Rc1/ re;
}

float Av2(float R7, float re)
{
	return R7/re;
}

float Avtotalfarasarcina(float Av1, float Av2_
{
	return Av1*Av2;
}

//tensiuni continue din amp cu doua etaje cuplate capacitiv

//betacc*R4 >> R2 si betcacc*R8>>R6

float VB(float R2, float R1, float VCC)
{
	return (R2/(R1+R2))*VCC;
}

//potentialDeBariera Vp sau Uprag
float VE(float  VB, float Vp)
{
	return VB-Vp;	
}

float IE(float  VE, float  R4)
{
	return VE/R4;
}


float IC(float IE)
{
	return IE;
}

float VC(float  VCC, float  IC, float  R3)
{
	return VCC-IC*R3;
}

//amplif cu mai multe etaje cuplate direct

//amplif cu mai multe etake cuplate prin transformator

//mult din formule sunt probabil gresite datorita confuziei c si e din manual
//greseala de scanare sau de redactare si necesita verificare si reparare
//o alta chestie placuta


//amplificatoare de putere 
//pagina 191

















